"""
Skrypt do uruchamiania serwer√≥w API Lista Obecno≈õci
"""
import subprocess
import sys
import os

# Pr√≥ba importu centralnej konfiguracji
try:
    from configs.app_config import APP_PORT_MAIN, APP_PORT_ALT, APP_DEFAULT_IP, WEB_PANEL_PORT
    MAIN_PORT = APP_PORT_MAIN
    ALT_PORT = APP_PORT_ALT
    WEB_PORT = WEB_PANEL_PORT
    SERVER_IP = APP_DEFAULT_IP
    CENTRAL_CONFIG_LOADED = True
    print("Zaimportowano centralnƒÖ konfiguracjƒô z configs/app_config.py")
except ImportError:
    MAIN_PORT = 8000
    ALT_PORT = 8080
    WEB_PORT = 8002
    SERVER_IP = "192.168.1.35"
    CENTRAL_CONFIG_LOADED = False
    print("UWAGA: Nie mo≈ºna zaimportowaƒá centralnej konfiguracji z configs/app_config.py")
    print("U≈ºywam domy≈õlnych warto≈õci")

def start_servers():
    """
    Uruchamia g≈Ç√≥wny i alternatywny serwer API w oddzielnych procesach
    """
    print("===================================================")
    print("      Uruchamianie serwer√≥w API Lista Obecno≈õci     ")
    print("===================================================")
    
    # Sprawdzanie czy katalog static istnieje, je≈õli nie - utw√≥rz go
    if not os.path.exists("static"):
        os.makedirs("static")
        print("‚úÖ Utworzono brakujƒÖcy katalog 'static'")
    
    # Uruchomienie g≈Ç√≥wnego serwera
    main_server = subprocess.Popen([sys.executable, "main.py"])
    print(f"‚úÖ Uruchomiono g≈Ç√≥wny serwer na porcie {MAIN_PORT}")
    print(f"üì° Adres: http://{SERVER_IP}:{MAIN_PORT}")
    
    # Uruchomienie alternatywnego serwera
    alt_server = subprocess.Popen([sys.executable, "server_alt_port.py"])
    print(f"‚úÖ Uruchomiono alternatywny serwer na porcie {ALT_PORT}")
    print(f"üì° Adres: http://{SERVER_IP}:{ALT_PORT}")
    
    # Uruchomienie serwera panelu webowego
    web_server = subprocess.Popen([
        sys.executable, "-m", "uvicorn", "main:app",
        "--host", "0.0.0.0",
        "--port", str(WEB_PORT)  # Rzutowanie na string, aby uniknƒÖƒá TypeError
    ])
    print(f"‚úÖ Uruchomiono serwer panelu webowego na porcie {WEB_PORT}")
    print(f"üì° Adres: http://{SERVER_IP}:{WEB_PORT}")
    
    print("\nüí° Serwery uruchomione! Pamiƒôtaj o konfiguracji firewalla.")
    print("üìÑ Zobacz plik FIREWALL_INSTRUKCJA.md aby dowiedzieƒá siƒô wiƒôcej.")
    
    if not CENTRAL_CONFIG_LOADED:
        print("\n‚ö†Ô∏è UWAGA: Centralna konfiguracja nie zosta≈Ça za≈Çadowana!")
        print("Mo≈ºesz napotkaƒá problemy z konfiguracjƒÖ aplikacji mobilnej.")
        print("Zalecane kroki:")
        print("1. Upewnij siƒô, ≈ºe katalog 'configs' istnieje")
        print("2. Sprawd≈∫ czy plik 'configs/app_config.py' jest dostƒôpny i poprawny")
        print("3. Uruchom ponownie serwery")
    
    print("\nNaci≈õnij Ctrl+C aby zatrzymaƒá wszystkie serwery...")
    
    try:
        # Czekaj na przerwanie przez u≈ºytkownika
        main_server.wait()
        alt_server.wait()
        web_server.wait()
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è Zatrzymywanie serwer√≥w...")
        main_server.terminate()
        alt_server.terminate()
        web_server.terminate()
        print("‚úÖ Serwery zatrzymane.")

if __name__ == "__main__":
    start_servers()
